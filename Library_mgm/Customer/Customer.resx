<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAASxJREFUaEPt
        mNENwjAMRPvFEswIWzELfLIEfPEFA4BPohK6ulzTQJOAn3QSwmc7LpDSdEEQBEHwwtq0M51N94WFnuiN
        NcwCiReTV3xJYQ2zhsD0XsESwlqSOZm8YiWEtSTDRZYmu392gUyy+88tsDJtTXvT7Sm8xnuITUX1V3Ft
        cMBucTRxbi/Epu4onMuouDYQuLrvFt8LnimfBOcxKq4NxMbEOWOCV8E5jIprA3Ewcc6Y4FVwDqPi2kBc
        TZwzJngVnMOouDYQzQ/Q/Feo+R9x89soaPpG1oOr2+xfiU+i+qu4NnwZ1V/Fq3+gYc+A2h8p2TMAu0XN
        D/Xsc0Eipq/xWIX9zREDlOZ/B+DEGpR08OUVKK2ko0evQEklH/56RUoo+/g9CIIg+DW67gHhgerKT4BV
        mwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox6.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAEGSURBVGhD7Zg7DsIwEERzDcRBOB5noeBeNNBAQQ3hMyu5GEUOWUtm7YV90msi7WhG6TwEQZBl
        DffwBF+NlQ7SRTqpWMEzzIW19AJVI3YwF9CD8icWOcDccQ8e4SI3yEet4S6qPjGgMtxF1ScGJDjDNOcO
        iw5m4AzTnBiQ4AzTnBiQ4AzTnBiQ4AzTnBEWHXwZ7qLqEwMqw11UfWJAgjNMc2JAgjNMcx6w6GAGzjDN
        qTWgFtxF1ScGVIa7qPr85IANvEL+3kLVw9Z0QC/lRdXT4hPyUS/l1Y+70wGtLX5e/zRgC7tnboCL8kJu
        gJvywnSAq/ICD3BXXnBdXnBdXnBdPgj+i2F4A5gFP2HmeajPAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAASNJREFUaEPt
        mD1OxjAUBHMPzs/RoOIO4FfQrCMNQ15+PskjbTVar5LChbfFYvEv3kbeRz5Hvk9ObdRWbbZQB32N7I2d
        mdps+Yj6G3sDV6S2D/Mxsnf4Fantw+ShZ9O+134g0L7XfiDQvtd+IKD3qGC9TUJ+ggrW2yTkJ6hgvU1C
        foIK1tsk5CeoQL4bvUcF8t3oPSpYb5OQn6CC9TYJ+QkqWG+TkJ+ggvU2CfkJKpDvRu9RgXw3eo8K1mcs
        uk8F6zMW3aeC9RmL7lPB+oxF96lAvhu9RwXy3eg9KpDvRu9RgXw3eo8Kj3/YylLy+KfFLCWPf9zN4h51
        UP2NRz6v5wEvx/qAu3n5D7jznq8c5s57vnKYu+7537Rw5T2fWSwWf2bbfgCEOjoZfFoqKgAAAABJRU5E
        rkJggg==
</value>
  </data>
  <metadata name="pictureBox1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>